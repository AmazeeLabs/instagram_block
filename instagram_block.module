<?php

/**
 * @file
 * Module file for the instagram_block module.
 */

/**
 * Implements hook_block_info().
 *
 * Defines the new instagram block.
 */
function instagram_block_block_info() {
  $blocks['instagram_block'] = array(
    'info' => t('Instagram Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * Set values to be used when rendering the block later.
 */
function instagram_block_block_configure($delta = '') {
  $form = array();

  if ($delta == 'instagram_block') {
    // Store data from variable in $form for now.
    $form['#data'] = variable_get('instagram_block_user_block_settings', array());

    $form['count'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of images to display.'),
      '#default_value' => isset($form['#data']['count']) ? $form['#data']['count'] : '',
    );

    $form['width'] = array(
      '#type' => 'textfield',
      '#title' => t('Image width in pixels.'),
      '#default_value' => isset($form['#data']['width']) ? $form['#data']['width'] : '',
    );

    $form['height'] = array(
      '#type' => 'textfield',
      '#title' => t('Image height in pixels.'),
      '#default_value' => isset($form['#data']['height']) ? $form['#data']['height'] : '',
    );

    $image_options = array(
      'thumbnail' => t('Thumbnail Preview'),
      'low_resolution' => t('Low Resolution'),
      'standard_resolution' => t('Standard Resolution'),
    );

    $form['img_resolution'] = array(
      '#type' => 'select',
      '#title' => t('Image resolution'),
      '#description' => t('Choose the quality of the images you would like to display.'),
      '#options' => $image_options,
      '#default_value' => isset($form['#data']['img_resolution']) ? $form['#data']['img_resolution'] : '',
    );
  }

  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Save the information from the configuration form to a drupal variable.
 */
function instagram_block_block_save($delta = '', $edit = array()) {
  if ($delta == 'instagram_block') {
    variable_set('instagram_block_user_block_settings', $edit);
  }
}

/**
 * Implements hook_block_view().
 *
 * Fetches the instagram photos and creates a render array.
 */
function instagram_block_block_view($delta = '') {
  $block = array();

  if ($delta == 'instagram_block') {
    // Add instagram_block specific styles.
    drupal_add_css(drupal_get_path('module', 'instagram_block') . '/css/instagram-block.css');

    // Get configuration values.
    $config = variable_get('instagram_block_admin_settings', array());
    $values = variable_get('instagram_block_user_block_settings', array());
    $img_resolution = isset($values['img_resolution']) ? $values['img_resolution'] : 'thumbnail';
    $content = array();

    // Check that block configuration is available.
    if (!isset($config['user_id']) || !isset($config['access_token'])) {
      // Remind user to fill in configuration.
      $content = instagram_block_get_configuration_reminder();
    }
    else {
      // Build and send request to the Instagram API.
      $request = new InstagramRequest($config['user_id'], $config['access_token'], $values['count']);
      $response = $request->get_instagram_posts();

      foreach ($response as $post) {
        $content['children'][] = array(
          '#markup' => '',
          '#theme' => 'instagram_block_image',
          '#post' => $post,
          '#href' => $post->link,
          '#src' => $post->images->{$img_resolution}->url,
          '#width' => $values['width'],
          '#height' => $values['height'],
        );
      }
    }

    $block['subject'] = 'Instagram Block';
    $block['content'] = $content;
  }

  return $block;
}

/**
 * Implements hook_menu().
 */
function instagram_block_menu() {
  $items['admin/config/services/instagram_block'] = array(
    'title' => 'Instagram Block',
    'description' => 'Configuration page for Instagram Block.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('instagram_block_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'instagram_block.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function instagram_block_theme() {
  return array(
    'instagram_block_image' => array(
      'variables' => array('height' => NULL,'width' => NULL, 'src' => NULL, 'href' => NULL, 'post' => NULL),
      'template' => 'instagram-block-image',
    ),
  );
}

/**
 * Builds render array to remind user to configure block settings.
 */
function instagram_block_get_configuration_reminder() {
  return array(
    '#markup' => t('Please don\'t forget to !configure this block.', array('!configure' => l(t('configure'),'admin/config/services/instagram_block')))
  );
}
